# Generated by Django 5.1.4 on 2024-12-19 01:22

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reviewblitz', '0010_weeklytheme_subsequent_chapter_theme_bonus_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='reviewblitzscoring',
            name='max_ratio_bonus',
            field=models.DecimalField(decimal_places=2, default=0, help_text='The maximum ratio bonus that can be given.', max_digits=3),
        ),
        migrations.AddField(
            model_name='reviewblitzscoring',
            name='ratio_bonus_multiplier',
            field=models.DecimalField(decimal_places=2, default=0, help_text='The multiplier applied to the ratio of reviews given to reviews received to determine the ratio bonus. (Set to 0 to disable this bonus.)', max_digits=3),
        ),
        migrations.AlterField(
            model_name='reviewblitzscoring',
            name='chapter_points',
            field=models.DecimalField(decimal_places=2, help_text='The number of points given for each chapter.', max_digits=3),
        ),
        migrations.AlterField(
            model_name='reviewblitzscoring',
            name='consecutive_chapter_bonus',
            field=models.DecimalField(decimal_places=2, help_text='The bonus points given for each (consecutive chapter interval) number of chapters reviewed of the same fic.', max_digits=3),
        ),
        migrations.AlterField(
            model_name='reviewblitzscoring',
            name='consecutive_chapter_interval',
            field=models.PositiveIntegerField(help_text='The number of chapters that must be reviewed to earn the consecutive chapter bonus (if enabled for the weekly theme).'),
        ),
        migrations.AlterField(
            model_name='reviewblitzscoring',
            name='long_chapter_bonus',
            field=models.DecimalField(decimal_places=2, help_text='The bonus points given for reviewing a long chapter.', max_digits=3),
        ),
        migrations.AlterField(
            model_name='reviewblitzscoring',
            name='long_chapter_bonus_words',
            field=models.PositiveIntegerField(help_text='The word count threshold above which a long chapter bonus can be given.'),
        ),
        migrations.AlterField(
            model_name='reviewblitzscoring',
            name='min_words',
            field=models.PositiveIntegerField(help_text='The minimum number of words a review must be to be counted.', verbose_name='Minimum words for review'),
        ),
        migrations.AlterField(
            model_name='reviewblitzscoring',
            name='theme_bonus',
            field=models.DecimalField(decimal_places=2, help_text='The bonus given for a review that adheres to the weekly theme.', max_digits=3),
        ),
        migrations.AlterField(
            model_name='reviewblitzscoring',
            name='words_per_chapter',
            field=models.PositiveIntegerField(help_text='The number of words per chapter to make a review count for full points for each chapter.'),
        ),
    ]
